{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/src/GameContainer.js\";\nimport React from 'react';\nimport alphabet_hash from './alphabet_hash';\nimport QuestionLetter from './QuestionLetter';\nimport ScoreTracker from './ScoreTracker';\n\nclass GameContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      alphabetArray: alphabet_hash,\n      currentLetter: \"\",\n      choices: [],\n      numOfAsked: 0,\n      numCorrect: 0,\n      seenLetters: []\n    };\n\n    this.generateQuestionLetter = () => {\n      return this.state.alphabetArray[Math.round(Math.random() * this.state.alphabetArray.length)].character;\n    };\n  }\n\n  //game container should manage state for questionLetter, answerContainer, and scoreTracker. so break this component into its separate duties.\n  //change all these p tags to h tags (css)\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ScoreTracker, {\n      numCorrect: this.state.numCorrect,\n      numOfAsked: this.state.numOfAsked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(QuestionLetter, {\n      generateQuestionLetter: this.generateQuestionLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(ChoiceContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/src/GameContainer.js"],"names":["React","alphabet_hash","QuestionLetter","ScoreTracker","GameContainer","Component","state","alphabetArray","currentLetter","choices","numOfAsked","numCorrect","seenLetters","generateQuestionLetter","Math","round","random","length","character","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAE1CC,KAF0C,GAElC;AACNC,MAAAA,aAAa,EAAEN,aADT;AAENO,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,UAAU,EAAE,CAJN;AAKNC,MAAAA,UAAU,EAAE,CALN;AAMNC,MAAAA,WAAW,EAAE;AANP,KAFkC;;AAAA,SAc1CC,sBAd0C,GAcjB,MAAM;AAC7B,aAAO,KAAKP,KAAL,CAAWC,aAAX,CAAyBO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKV,KAAL,CAAWC,aAAX,CAAyBU,MAAlD,CAAzB,EAAoFC,SAA3F;AACD,KAhByC;AAAA;;AAkB5C;AAEA;AAEEC,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWK,UADzB;AAEE,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWI,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,cAAD;AACE,MAAA,sBAAsB,EAAE,KAAKG,sBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAQE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAcD;;AArCyC;;AAwC5C,eAAeT,aAAf","sourcesContent":["import React from 'react'\nimport alphabet_hash from './alphabet_hash'\nimport QuestionLetter from './QuestionLetter'\nimport ScoreTracker from './ScoreTracker'\n\nclass GameContainer extends React.Component {\n\n  state = {\n    alphabetArray: alphabet_hash,\n    currentLetter: \"\",\n    choices: [],\n    numOfAsked: 0,\n    numCorrect: 0,\n    seenLetters: [],\n  }\n  //keep state here... every other child component should receive GameContainer's props\n\n  //make a copy of the array and pop off until array.length = 0\n\n  generateQuestionLetter = () => {\n    return this.state.alphabetArray[Math.round(Math.random()*this.state.alphabetArray.length)].character\n  }\n\n//game container should manage state for questionLetter, answerContainer, and scoreTracker. so break this component into its separate duties.\n\n//change all these p tags to h tags (css)\n\n  render(){\n    return(\n      <React.Fragment>\n        <ScoreTracker\n          numCorrect={this.state.numCorrect}\n          numOfAsked={this.state.numOfAsked}\n        />\n        <QuestionLetter\n          generateQuestionLetter={this.generateQuestionLetter}\n        />\n        <ChoiceContainer\n\n          />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default GameContainer\n"]},"metadata":{},"sourceType":"module"}