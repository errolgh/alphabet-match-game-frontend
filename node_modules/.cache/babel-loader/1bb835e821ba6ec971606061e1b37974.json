{"ast":null,"code":"import _toConsumableArray from\"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import alphabet_hash from'./alphabet_hash';import QuestionLetter from'./QuestionLetter';import ScoreTracker from'./ScoreTracker';import ChoiceContainer from'./ChoiceContainer';// import CheatModal from './CheatModal'\nvar GameContainer=/*#__PURE__*/function(_React$Component){_inherits(GameContainer,_React$Component);function GameContainer(){var _this;_classCallCheck(this,GameContainer);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameContainer).call(this));_this.generateChocies=function(){var correctLetter=_this.state.lettersRemaining[Math.round(Math.random()*_this.state.lettersRemaining.length)];_this.setState({currentLetter:correctLetter});var choices=[];var copyOfFilteredLetters=_toConsumableArray(_this.state.lettersRemaining);for(var i=0;choices.length<5;i++){var index=Math.round(Math.random()*copyOfFilteredLetters.length);var wrongAnswer=copyOfFilteredLetters[index];if(!choices.includes(wrongAnswer)&&correctLetter!==wrongAnswer){choices.push(wrongAnswer);copyOfFilteredLetters.pop(index);}}var randomInt=Math.round(Math.random()*5);choices.splice(randomInt,0,correctLetter);_this.setState({choices:choices});};_this.updateSelectedChoice=function(event){event.preventDefault();var letterObj=alphabet_hash.find(function(letter){return letter.implementation===event.target.value;});// console.log(event)\n// console.log(letterObj)\n_this.setState({selectedChoice:letterObj});};_this.removeLastLetter=function(lastLetter){var filteredLetters=_this.state.lettersRemaining.filter(function(letter){return letter.id!==lastLetter.id;});_this.setState({lettersRemaining:filteredLetters});console.log(\"removeLastLetter: \",lastLetter);console.log(\"lettersRemaining: \",filteredLetters);};_this.addPoint=function(){if(_this.state.currentLetter===_this.state.selectedChoice){_this.setState({numCorrect:_this.state.numCorrect+1});}};_this.handleSubmit=function(event){event.preventDefault();_this.addPoint();_this.removeLastLetter(_this.state.currentLetter);_this.setState({numOfAsked:_this.state.numOfAsked+1,selectedChoice:null,choices:[]});_this.generateChocies();};_this.state={lettersRemaining:alphabet_hash,currentLetter:\"\",choices:[],selectedChoice:null,numOfAsked:0,numCorrect:0//choiceSelected: false,\n};return _this;}_createClass(GameContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.generateChocies();}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(ScoreTracker,{numCorrect:this.state.numCorrect,numOfAsked:this.state.numOfAsked}),React.createElement(\"h3\",null,\"What sound does this letter make?\"),React.createElement(QuestionLetter,{generateQuestionLetter:this.generateQuestionLetter,currentLetter:this.state.currentLetter}),React.createElement(ChoiceContainer,{updateSelectedChoice:this.updateSelectedChoice,handleSubmit:this.handleSubmit,choices:this.state.choices,lettersRemaining:this.state.lettersRemaining}));}}]);return GameContainer;}(React.Component);// let nextCurrentLetter = this.state.lettersRemaining[Math.round(Math.random()*this.state.lettersRemaining.length)]\n//   this.setState({currentLetter: nextCurrentLetter})\nexport{GameContainer as default};","map":{"version":3,"sources":["/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/src/GameContainer.js"],"names":["React","alphabet_hash","QuestionLetter","ScoreTracker","ChoiceContainer","GameContainer","generateChocies","correctLetter","state","lettersRemaining","Math","round","random","length","setState","currentLetter","choices","copyOfFilteredLetters","i","index","wrongAnswer","includes","push","pop","randomInt","splice","updateSelectedChoice","event","preventDefault","letterObj","find","letter","implementation","target","value","selectedChoice","removeLastLetter","lastLetter","filteredLetters","filter","id","console","log","addPoint","numCorrect","handleSubmit","numOfAsked","generateQuestionLetter","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport alphabet_hash from './alphabet_hash'\nimport QuestionLetter from './QuestionLetter'\nimport ScoreTracker from './ScoreTracker'\nimport ChoiceContainer from './ChoiceContainer'\n// import CheatModal from './CheatModal'\n\nexport default class GameContainer extends React.Component {\n  constructor(){\n    super()\n      this.state = {\n        lettersRemaining: alphabet_hash,\n        currentLetter: \"\",\n        choices: [],\n        selectedChoice: null,\n        numOfAsked: 0,\n        numCorrect: 0,\n        //choiceSelected: false,\n      }\n  }\n\n  componentDidMount(){\n    this.generateChocies()\n  }\n\n  generateChocies = () => {\n    let correctLetter = this.state.lettersRemaining[Math.round(Math.random()*this.state.lettersRemaining.length)]\n    this.setState({currentLetter: correctLetter})\n\n    let choices = []\n    let copyOfFilteredLetters = [...this.state.lettersRemaining]\n\n     for (let i = 0; choices.length < 5; i++) {\n      let index = Math.round(Math.random()*copyOfFilteredLetters.length)\n      let wrongAnswer = copyOfFilteredLetters[index]\n      if (!choices.includes(wrongAnswer) && correctLetter !== wrongAnswer) {\n          choices.push(wrongAnswer)\n          copyOfFilteredLetters.pop(index)\n      }\n    }\n      let randomInt = Math.round(Math.random()*5)\n      choices.splice(randomInt, 0, correctLetter)\n      this.setState({choices: choices})\n  }\n\n  updateSelectedChoice = (event) => {\n    event.preventDefault()\n    let letterObj = alphabet_hash.find(letter => {\n      return letter.implementation === event.target.value\n    })\n    // console.log(event)\n    // console.log(letterObj)\n    this.setState({selectedChoice: letterObj})\n  }\n\n  removeLastLetter = (lastLetter) => {\n    let filteredLetters = this.state.lettersRemaining.filter(letter => letter.id !== lastLetter.id)\n    this.setState({\n      lettersRemaining: filteredLetters\n    })\n    console.log(\"removeLastLetter: \",lastLetter)\n    console.log(\"lettersRemaining: \", filteredLetters)\n  }\n\n  addPoint = () => {\n    if (this.state.currentLetter === this.state.selectedChoice) {\n      this.setState({numCorrect: this.state.numCorrect + 1})\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.addPoint()\n    this.removeLastLetter(this.state.currentLetter)\n    this.setState({\n      numOfAsked: this.state.numOfAsked + 1,\n      selectedChoice: null,\n      choices: [],\n    })\n    this.generateChocies()\n  }\n  render(){\n    return(\n      <React.Fragment>\n      {/* <CheatModal/> */}\n        <ScoreTracker\n          numCorrect={this.state.numCorrect}\n          numOfAsked={this.state.numOfAsked}\n        />\n        <h3>What sound does this letter make?</h3>\n        <QuestionLetter\n          generateQuestionLetter={this.generateQuestionLetter}\n          currentLetter={this.state.currentLetter}\n        />\n        <ChoiceContainer\n          updateSelectedChoice={this.updateSelectedChoice}\n          handleSubmit={this.handleSubmit}\n          choices={this.state.choices}\n          lettersRemaining={this.state.lettersRemaining}\n        />\n      </React.Fragment>\n    )\n  }\n}\n// let nextCurrentLetter = this.state.lettersRemaining[Math.round(Math.random()*this.state.lettersRemaining.length)]\n//   this.setState({currentLetter: nextCurrentLetter})\n"]},"metadata":{},"sourceType":"module"}