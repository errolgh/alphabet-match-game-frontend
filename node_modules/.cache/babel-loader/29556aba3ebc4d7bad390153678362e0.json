{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/src/GameContainer.js\";\nimport React from 'react';\nimport alphabet_hash from './alphabet_hash';\nimport QuestionLetter from './QuestionLetter';\nimport ScoreTracker from './ScoreTracker';\nimport ChoiceContainer from './ChoiceContainer';\n\nclass GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.updateSelectedChoice = event => {\n      console.log(\"attempting to update choice...\", event);\n    };\n\n    this.state = {\n      alphabetArray: alphabet_hash,\n      lettersRemaining: alphabet_hash,\n      currentLetter: {},\n      choices: [],\n      selectedChoice: null,\n      numOfAsked: 0,\n      numCorrect: 0\n    };\n  } //this code is so broken rn:\n\n\n  componentDidMount() {\n    //choices must be 6 elements in length and contain the correct answer (currentletter's object)\n    let letter = this.state.alphabetArray[Math.round(Math.random() * this.state.alphabetArray.length)];\n    let choices = [];\n    choices.push(letter); //select 5 more objects that are not included in choices array and push into choices array if not included\n\n    console.log(this.state.lettersRemaining);\n    let wrongletter = this.state.alphabetArray[Math.round(Math.random() * this.state.alphabetArray.length)];\n\n    if (choices.length < 6 && wrongletter !== letter) {\n      choices.push(wrongletter);\n      let copyOfLettersRemaining = [...this.state.lettersRemaining].filter(leftLetter => {\n        return !this.state.choices.includes(letter);\n      });\n    }\n\n    this.setState({\n      currentLetter: letter,\n      choices: choices\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ScoreTracker, {\n      numCorrect: this.state.numCorrect,\n      numOfAsked: this.state.numOfAsked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Choose the correct sound for this letter:\"), React.createElement(QuestionLetter, {\n      generateQuestionLetter: this.generateQuestionLetter,\n      currentLetter: this.state.currentLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ChoiceContainer, {\n      updateSelectedChoice: this.updateSelectedChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/flatironschool/Development/alphabet-match-game/alphabet-match-game-frontend/src/GameContainer.js"],"names":["React","alphabet_hash","QuestionLetter","ScoreTracker","ChoiceContainer","GameContainer","Component","constructor","updateSelectedChoice","event","console","log","state","alphabetArray","lettersRemaining","currentLetter","choices","selectedChoice","numOfAsked","numCorrect","componentDidMount","letter","Math","round","random","length","push","wrongletter","copyOfLettersRemaining","filter","leftLetter","includes","setState","render","generateQuestionLetter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAE;AACX;;AADW,SAmCbC,oBAnCa,GAmCWC,KAAD,IAAW;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;AACD,KArCY;;AAET,SAAKG,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAEZ,aADJ;AAEXa,MAAAA,gBAAgB,EAAEb,aAFP;AAGXc,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,cAAc,EAAE,IALL;AAMXC,MAAAA,UAAU,EAAE,CAND;AAOXC,MAAAA,UAAU,EAAE;AAPD,KAAb;AASH,GAZyC,CAc5C;;;AACEC,EAAAA,iBAAiB,GAAE;AACjB;AACA,QAAIC,MAAM,GAAG,KAAKT,KAAL,CAAWC,aAAX,CAAyBS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKZ,KAAL,CAAWC,aAAX,CAAyBY,MAAlD,CAAzB,CAAb;AACA,QAAIT,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAACU,IAAR,CAAaL,MAAb,EAJiB,CAKjB;;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,gBAAvB;AAEA,QAAIa,WAAW,GAAG,KAAKf,KAAL,CAAWC,aAAX,CAAyBS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKZ,KAAL,CAAWC,aAAX,CAAyBY,MAAlD,CAAzB,CAAlB;;AACE,QAAIT,OAAO,CAACS,MAAR,GAAiB,CAAjB,IAAsBE,WAAW,KAAKN,MAA1C,EAAkD;AAChDL,MAAAA,OAAO,CAACU,IAAR,CAAaC,WAAb;AACA,UAAIC,sBAAsB,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWE,gBAAf,EAAiCe,MAAjC,CAAwCC,UAAU,IAAI;AACjF,eAAO,CAAC,KAAKlB,KAAL,CAAWI,OAAX,CAAmBe,QAAnB,CAA4BV,MAA5B,CAAR;AACD,OAF4B,CAA7B;AAGD;;AACH,SAAKW,QAAL,CAAc;AACZjB,MAAAA,aAAa,EAAEM,MADH;AAEZL,MAAAA,OAAO,EAAEA;AAFG,KAAd;AAID;;AAMDiB,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWO,UADzB;AAEE,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWM,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDALF,EAME,oBAAC,cAAD;AACE,MAAA,sBAAsB,EAAE,KAAKgB,sBAD/B;AAEE,MAAA,aAAa,EAAE,KAAKtB,KAAL,CAAWG,aAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUE,oBAAC,eAAD;AACE,MAAA,oBAAoB,EAAE,KAAKP,oBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAgBD;;AAzDyC;;AA4D5C,eAAeH,aAAf","sourcesContent":["import React from 'react'\nimport alphabet_hash from './alphabet_hash'\nimport QuestionLetter from './QuestionLetter'\nimport ScoreTracker from './ScoreTracker'\nimport ChoiceContainer from './ChoiceContainer'\n\n\nclass GameContainer extends React.Component {\n  constructor(){\n    super()\n      this.state = {\n        alphabetArray: alphabet_hash,\n        lettersRemaining: alphabet_hash,\n        currentLetter: {},\n        choices: [],\n        selectedChoice: null,\n        numOfAsked: 0,\n        numCorrect: 0,\n      }\n  }\n\n//this code is so broken rn:\n  componentDidMount(){\n    //choices must be 6 elements in length and contain the correct answer (currentletter's object)\n    let letter = this.state.alphabetArray[Math.round(Math.random()*this.state.alphabetArray.length)]\n    let choices = []\n    choices.push(letter)\n    //select 5 more objects that are not included in choices array and push into choices array if not included\n    console.log(this.state.lettersRemaining)\n\n    let wrongletter = this.state.alphabetArray[Math.round(Math.random()*this.state.alphabetArray.length)]\n      if (choices.length < 6 && wrongletter !== letter) {\n        choices.push(wrongletter)\n        let copyOfLettersRemaining = [...this.state.lettersRemaining].filter(leftLetter => {\n          return !this.state.choices.includes(letter)\n        })\n      }\n    this.setState({\n      currentLetter: letter,\n      choices: choices\n    })\n  }\n\n  updateSelectedChoice = (event) => {\n    console.log(\"attempting to update choice...\", event)\n  }\n\n  render(){\n    return(\n      <React.Fragment>\n        <ScoreTracker\n          numCorrect={this.state.numCorrect}\n          numOfAsked={this.state.numOfAsked}\n        />\n        <h3>Choose the correct sound for this letter:</h3>\n        <QuestionLetter\n          generateQuestionLetter={this.generateQuestionLetter}\n          currentLetter={this.state.currentLetter}\n        />\n        <ChoiceContainer\n          updateSelectedChoice={this.updateSelectedChoice}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default GameContainer\n"]},"metadata":{},"sourceType":"module"}